const cds = require('@sap/cds');
const validation = require('./common/validation')
const crud = require('./common/crud')
const xsenv = require("@sap/xsenv");
const {  S3Client } = require("@aws-sdk/client-s3");


class CatalogService extends cds.ApplicationService {
    init() {
        
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        // INIT - Instanciando S3                                                           //
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//

        xsenv.loadEnv();
        const objectstore = xsenv.readServices()['capdox-objectstore-service'];
        const bucket = objectstore.credentials.bucket;

        const s3 = new S3Client({
            region: objectstore.credentials.region,
            credentials: {
                accessKeyId: objectstore.credentials.access_key_id,
                secretAccessKey: objectstore.credentials.secret_access_key
            }
        });

        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        // Cnh - Create - Valida se o EAN já existe                                         //
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        this.before('CREATE', ['Cnh'], async (req) => {
            return await validation.CnhCreate(req);
        });
  
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        // Cnh - Create - Obtém o Content e faz a criação                                    //
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        this.on('CREATE', ['Cnh'], async (req, next) => {

            
            return next();
        }); 
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        // Cnh - Create - Inicia o DOX                                                      //
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        this.after('CREATE', ['Cnh'], async (Cnh) => {

           
        }); 
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        // Cnh - READ -  Obtém o stream                         //
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        this.on('READ', ['Cnh'], async (req, next) => {
            
            if (req.data.ID && req.query._streaming) {            
                return await crud.CnhReadS3Stream(req.data.ID, s3, bucket)  
            } else {
                return next()    
            }
            
   
        });
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        // Cnh - READ - Obtém o url                            //
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        this.after('READ', ['Cnh'], async (aCnh, req) => {
            
            if (!req.query._streaming) {
                for (let Cnh of aCnh) 
                    Cnh.imageUrl = Cnh.imgUrl = await crud.CnhReadS3Url(Cnh, s3, bucket);
                    
                
            }
         
        });
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        // Cnh - UPDATE - Verifica se o EAN existe e é diferente do produto atual      //
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        this.before('UPDATE', ['Cnh'], async (req) => {  
            return await validation.CnhUpdate(req);  
        });

        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        // Cnh - UPDATE - Verifica conteúdo                                            //
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        this.on('UPDATE', ['Cnh'], async (req, next) => {
            
            if (req.data.imageContent) {
                try {
                    return await crud.CnhCreateS3(req, s3, bucket)
                } catch (error) {
                     error.code = "404" 
                    throw(error)
                }
                
            } else {
                return next();
            }
            
       
        });
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        // Cnh - UPDATE - Verifica conteúdo                                            //
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        this.after('UPDATE', ['Cnh'], async (Cnh) => {
            if (Cnh.imageContent) {
                this.emit('postDOXData' , Cnh.ID );
             }
        });

        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        // Cnh - DELETE - Elimina conteúdo                                            //
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        this.before('DELETE', ['Cnh'], async (req) => {
           
            await validation.CnhDelete(req);
        
            return await crud.CnhDelete(req, s3, bucket);
          
        });
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        // Cnh - UPDATE - Verifica conteúdo                                            //
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        this.on('DELETE', ['Cnh'], async (req, next) => {
 
            return next();
        });
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        // Cnh - EVENT - Return DOX Data                           //
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        this.on('postDOXData', async (msg) => {
                //Call DOX
                console.log('Call POST DOX DATA')
                const idEvent = await crud.doxUpload(msg.data, s3, bucket);
                if (idEvent) {
                    this.emit('returnDOXData' , idEvent );
                }  


            
        });

        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        // Cnh - EVENT - Return DOX Data                           //
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        this.on('returnDOXData', async (msg) => {
            for (let i = 0; i < msg.data.Retry; i++) {
                await new Promise(resolve => setTimeout(resolve, 30000));
                const ok = await crud.doxReturn(msg.data);
                
                if (ok){
                    break;
                }
            }    
        });        
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        // Cnh -  FUNCTION CONTENT - Post Image Content                                 //
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        this.on('postImageContent', async (req) => {
            return await crud.postImageContentRest(req);   
           
        
        });

        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        // Cnh -  FUNCTION CONTENT - getUpUrl                               //
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        //----------------------------------------------------------------------------------//
        this.on('uploadcnh', async (req) => {
            return await crud.uploadCnh(req,s3, bucket);   
           
        
        });

        

        return super.init();
    }
}

module.exports = { CatalogService };
